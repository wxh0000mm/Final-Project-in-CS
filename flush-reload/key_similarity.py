#!/usr/bin/python

import sys
import random

#change uncertain bits to random bits, because why not
def improve_odds(ff_key):
    ff_key = list(ff_key)
    for i in range(len(ff_key)):
        if ff_key[i] == '_' or ff_key[i] == '?':
            ff_key[i] = str(random.randint(0,1))
    return ''.join(ff_key)

def pad_with_success(ff_key, private_key):
    ff_key += private_key[len(ff_key):]
    return ff_key

private_key

ff_result = str(sys.argv[1])
#ff_result = improve_odds(ff_result)
ff_result = pad_with_success(ff_result, private_key)

#add padding to ff_result to match the length of the real private key

padding_length = abs(len(private_key) - len(ff_result))

if(len(private_key) > len(ff_result)):
    ff_result += 'a' * padding_length
else:
    private_key += 'a' * padding_length

identical_counter = 0

for i in range(len(private_key)):
    if private_key[i] == ff_result[i]:  #or ff_result[i] == '_':
        identical_counter += 1

similarity = (identical_counter/(len(private_key) - padding_length)) * 100

print('[*] ' + str(similarity) + '% similar')
